name: CI/CD Pipeline for Data Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: "data-pipeline"
  VERSION: "1.0.0"
  LOCATION: "europe-west2"
  GCP_PROJECT: "my-gcp-project-id"
  REPOSITORY: "pipeline-images"

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install pylint
          pip install -r requirements.txt

      - name: Run pylint
        run: |
          mkdir -p reports
          pylint scripts/ > reports/pylint.log || true
        continue-on-error: true

      - name: Upload Linting Artifact
        uses: actions/upload-artifact@v3
        with:
          name: pylint-report
          path: reports/pylint.log

  test:
    name: Run Tests (Placeholder)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create Placeholder Test Results
        run: |
          mkdir -p reports
          echo "<testsuite name='PlaceholderTests'><testcase classname='Placeholder' name='DummyTest'/></testsuite>" > reports/test-results.xml

      - name: Upload Placeholder Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: reports/test-results.xml

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Google Container Registry
        env:
          GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          echo "${GCP_SA_KEY}" | docker login -u _json_key --password-stdin https://gcr.io

      - name: Build and tag Docker image
        env:
          GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
        run: |
          docker build . -t europe-west2-docker.pkg.dev/${{ env.GCP_PROJECT }}/car-sales-pipeline/my-app:${{ github.sha }}
          docker tag europe-west2-docker.pkg.dev/${{ env.GCP_PROJECT }}/car-sales-pipeline/my-app:${{ github.sha }} europe-west2-docker.pkg.dev/${{ env.GCP_PROJECT }}/car-sales-pipeline/my-app:latest
          docker tag europe-west2-docker.pkg.dev/${{ env.GCP_PROJECT }}/car-sales-pipeline/my-app:${{ github.sha }} europe-west2-docker.pkg.dev/${{ env.GCP_PROJECT }}/car-sales-pipeline/my-app:${{ env.VERSION }}

      - name: Push Docker image
        env:
          GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
        run: |
          docker push gcr.io/${{ env.GCP_PROJECT }}/sales-data-pipeline/my-app:${{ github.sha }}
          docker push gcr.io/${{ env.GCP_PROJECT }}/sales-data-pipeline/my-app:latest
          docker push gcr.io/${{ env.GCP_PROJECT }}/sales-data-pipeline/my-app:${{ env.VERSION }}
